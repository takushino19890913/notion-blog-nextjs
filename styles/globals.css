@tailwind base;
@tailwind components;
@tailwind utilities;

/*
Selectionで選択したテキストのバックグラウンド、色を指定できる。
*/

::selection {
  background-color: black;
  color: #fff;
}

/*
*/
.code-block-wrapper > pre {
  margin: 0px !important;
}

.link-card:hover {
  background-color: #dddddd;
}

/*Loading anim*/
.animate-polishing {
  text-align: center;
}

.animate-polishing span {
  position: relative;
  color: #3a4a64;
  padding: 0 0.2em;
  visibility: visible;
  opacity: 0.5;
  -webkit-animation: load 2s ease-in-out;
  -moz-animation: load 2s ease-in-out;
  -ms-animation: load 2s ease-in-out;
  -o-animation: load 2s ease-in-out;
  animation: load 2s ease-in-out;
  -webkit-animation-iteration-count: infinite;
  -moz-animation-iteration-count: infinite;
  -ms-animation-iteration-count: infinite;
  -o-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
}
.animate-polishing span:nth-of-type(1) {
  -webkit-animation-delay: 0s;
  -moz-animation-delay: 0s;
  -ms-animation-delay: 0s;
  -o-animation-delay: 0s;
  animation-delay: 0s;
}
.animate-polishing span:nth-of-type(2) {
  -webkit-animation-delay: 0.1s;
  -moz-animation-delay: 0.1s;
  -ms-animation-delay: 0.1s;
  -o-animation-delay: 0.1s;
  animation-delay: 0.1s;
}
.animate-polishing span:nth-of-type(3) {
  -webkit-animation-delay: 0.2s;
  -moz-animation-delay: 0.2s;
  -ms-animation-delay: 0.2s;
  -o-animation-delay: 0.2s;
  animation-delay: 0.2s;
}
.animate-polishing span:nth-of-type(4) {
  -webkit-animation-delay: 0.5s;
  -moz-animation-delay: 0.5s;
  -ms-animation-delay: 0.5s;
  -o-animation-delay: 0.5s;
  animation-delay: 0.5s;
}
.animate-polishing span:nth-of-type(5) {
  -webkit-animation-delay: 0.4s;
  -moz-animation-delay: 0.4s;
  -ms-animation-delay: 0.4s;
  -o-animation-delay: 0.4s;
  animation-delay: 0.4s;
}
.animate-polishing span:nth-of-type(6) {
  -webkit-animation-delay: 1s;
  -moz-animation-delay: 1s;
  -ms-animation-delay: 1s;
  -o-animation-delay: 1s;
  animation-delay: 1s;
}
.animate-polishing span:nth-of-type(7) {
  -webkit-animation-delay: 0.6s;
  -moz-animation-delay: 0.6s;
  -ms-animation-delay: 0.6s;
  -o-animation-delay: 0.6s;
  animation-delay: 0.6s;
}

@-webkit-keyframes load {
  0% {
    visibility: visible;
    opacity: 0.5;
    text-shadow: none;
  }
  50% {
    visibility: visible;
    opacity: 1;
    text-shadow: 0 1px 8px #1cc, 0 -1px 8px #1cc;
  }
  100% {
    visibility: visible;
    opacity: 0.5;
    text-shadow: none;
  }
}
@-moz-keyframes load {
  0% {
    visibility: visible;
    opacity: 0.5;
    text-shadow: none;
  }
  50% {
    visibility: visible;
    opacity: 1;
    text-shadow: 0 1px 8px #1cc, 0 -1px 8px #1cc;
  }
  100% {
    visibility: visible;
    opacity: 0.5;
    text-shadow: none;
  }
}
@-ms-keyframes load {
  0% {
    visibility: visible;
    opacity: 0.5;
    text-shadow: none;
  }
  50% {
    visibility: visible;
    opacity: 1;
    text-shadow: 0 1px 8px #1cc, 0 -1px 8px #1cc;
  }
  100% {
    visibility: visible;
    opacity: 0.5;
    text-shadow: none;
  }
}
@-o-keyframes load {
  0% {
    visibility: visible;
    opacity: 0.5;
    text-shadow: none;
  }
  50% {
    visibility: visible;
    opacity: 1;
    text-shadow: 0 1px 8px #1cc, 0 -1px 8px #1cc;
  }
  100% {
    visibility: visible;
    opacity: 0.5;
    text-shadow: none;
  }
}
@keyframes load {
  0% {
    visibility: visible;
    opacity: 0.5;
    text-shadow: none;
  }
  50% {
    visibility: visible;
    opacity: 1;
    text-shadow: 0 1px 8px #1cc, 0 -1px 8px #1cc;
  }
  100% {
    visibility: visible;
    opacity: 0.5;
    text-shadow: none;
  }
}

/* タイプライターアニメーション */
.typewriter {
  border-right: 0.05em solid black;
  padding-right: 0.2em; /* Add this line */
  white-space: nowrap;
  overflow: hidden;
}

.typewriterBlink {
  animation: blink 1s steps(1) infinite;
}

@keyframes blink {
  50% {
    border-color: transparent;
  }
}

/* スクロールボタン　矢印の大きさを設定　*/
@media only screen and (max-width: 639px) {
  .scroll-anim > a::before {
    width: 5px;
    height: 5px;
  }
}

@media only screen and (min-width: 640px) {
  .scroll-anim > a::before {
    width: 5px;
    height: 5px;
  }
}

.scroll-anim {
  position: absolute;
  width: 100%;
  bottom: 0;
  text-align: center;
}
.scroll-anim > a {
  position: relative;
  display: inline-block;
  font-weight: bold;
  color: #002066;
  text-decoration: none;
  padding: 0 0 50px;
}

.scroll-anim > a:hover {
  color: #002066;
}

.scroll-anim > a:hover::after {
  content: '';
  /*絶対配置で波形の位置を決める*/
  position: absolute;
  left: -12px;
  top: -12px;
  /*波形の形状*/
  border: 1px solid #002066;
  width: 60px;
  height: 60px;
  border-radius: 50%;
  /*はじめは不透明*/
  opacity: 1;
  /*アニメーションの設定*/
  animation: 1s circleanime2 forwards;
}

/*波形が広がるアニメーション*/
@keyframes circleanime2 {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(2);
    opacity: 0;
  }
}

.scroll-white > a {
  color: #fff;
  text-shadow: 0.375px 0.375px 0.25px #aaa, -0.375px 0.375px 0.25px #aaa,
    0.375px -0.375px 0.25px #aaa, -0.375px -0.375px 0.25px #aaa,
    0.375px 0px 0.25px #aaa, 0px 0.375px 0.25px #aaa, -0.375px 0px 0.25px #aaa,
    0px -0.375px 0.25px #aaa;
}

.scroll-white > a:hover {
  color: #eee;
}
/*矢印を作成する*/
.scroll-anim > a::before {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  bottom: 40px;
  margin: auto;
  transform: rotate(45deg);
  animation: move 2s infinite;
}
.scroll-white > a::before {
  border-bottom: 2px solid #fff;
  border-right: 2px solid #fff;
}
.scroll-green > a::before {
  border-bottom: 2px solid #002066;
  border-right: 2px solid #002066;
}

@keyframes move {
  0% {
    transform: rotate(45deg) translate(0, 0);
  }
  20% {
    transform: rotate(45deg) translate(10px, 10px);
  }
  40% {
    transform: rotate(45deg) translate(0, 0);
  }
}

/* emerge animation in screen */

.isInScreen {
  animation: emerge 8s linear forwards;
}

@keyframes emerge {
  0% {
    opacity: 0;
  }
  80% {
    opacity: 0;
  }
  100% {
    opacity: 100;
  }
}

/**
画像を光らせるエフェクト
*/
/* .reflection{
  display:inline-block;
  position:relative;
  overflow:hidden;
  }
   
  .reflection:after {
  content:"";
  height:100%;
  width:30px;
  position:absolute;
  top:-180px;
  left:0;
  background-color: #FCF2DC;
  opacity:0;
  -webkit-transform: rotate(45deg);
  -webkit-animation: reflection 10s ease-in-out infinite;
  }
   
  @keyframes reflection {
  0% { -webkit-transform: scale(0) rotate(45deg); opacity: 0; }
  75% { -webkit-transform: scale(0) rotate(45deg); opacity: 0.5; }
  81% { -webkit-transform: scale(4) rotate(45deg); opacity: 1; }
  100% { -webkit-transform: scale(50) rotate(45deg); opacity: 0; }
  } */

/* #navMenuBtn {
    animation: translateLeft 4s linear infinite;
  }
  
  @keyframes translateLeft {
    0%, 12.5%, 25%, 100% { transform: translateX(0); }
    6.125%, 18.875% { transform: translateX(-11px); }
  }
  

#navMenuBtn:hover {
  /* ここに、オレンジがはみ出してくる処理を書きたい。
} */

/* ハンバーガーメニューのアニメーション　*/
/*ボタン外側※レイアウトによってpositionや形状は適宜変更してください*/
.openbtn1 {
  position: relative; /*ボタン内側の基点となるためrelativeを指定*/
  background: #002066;
  cursor: pointer;
  width: 80px; /*ボタンの大きさを大きくするためにwidthとheightを増やす*/
  height: 80px; /*ボタンの大きさを大きくするためにwidthとheightを増やす*/
  border-radius: 50%; /*ボタンを円にするためにborder-radiusを50%にする*/
  transition: transform 0.2s;
}

.openbtn1_mobile {
  position: relative; /*ボタン内側の基点となるためrelativeを指定*/
  background: #002066;
  cursor: pointer;
  width: 60px; /*ボタンの大きさを大きくするためにwidthとheightを増やす*/
  height: 60px; /*ボタンの大きさを大きくするためにwidthとheightを増やす*/
  border-radius: 50%; /*ボタンを円にするためにborder-radiusを50%にする*/
  transition: transform 0.2s;
}

.openbtn1:hover openbtn1_mobile:hover {
  transform: scale(1.1); /* ホバー時に少し拡大 */
}

/*ボタン内側*/
.openbtn1 span,
.openbtn1_mobile span {
  display: inline-block;
  transition: all 1s; /*アニメーションの設定*/
  position: absolute;
  left: 28px; /*ボタンの大きさを大きくしたために、位置を調整*/
  height: 3px;
  border-radius: 2px;
  z-index: 100;
  background: #fcf2dc;
  width: 30%; /*線の長さを調整*/
}
.openbtn1_mobile span {
  left: 21px; /*モバイル用の位置を調整*/
}

.openbtn1 span:nth-of-type(1) {
  z-index: 100;
  top: 33px; /*ボタンの大きさを大きくしたために、位置を調整*/
}

.openbtn1 span:nth-of-type(2) {
  z-index: 100;
  top: 39px; /*ボタンの大きさを大きくしたために、位置を調整*/
}

.openbtn1 span:nth-of-type(3) {
  z-index: 100;
  top: 45px; /*ボタンの大きさを大きくしたために、位置を調整*/
}

.openbtn1_mobile span:nth-of-type(1) {
  z-index: 100;
  top: 23px; /*モバイル用の位置を調整*/
}

.openbtn1_mobile span:nth-of-type(2) {
  z-index: 100;
  top: 29px; /*モバイル用の位置を調整*/
}

.openbtn1_mobile span:nth-of-type(3) {
  z-index: 100;
  top: 35px; /*モバイル用の位置を調整*/
}

/*activeクラスが付与されると線が回転して×に*/

.openbtn1.active span:nth-of-type(1) {
  z-index: 100;
  top: 32px; /*ボタンの大きさを大きくしたために、位置を調整*/
  left: 28px; /*ボタンの大きさを大きくしたために、位置を調整*/
  transform: translateY(6px) rotate(-45deg);
  width: 30%;
}

.openbtn1_mobile.active span:nth-of-type(1) {
  top: 22px; /*モバイル用の位置を調整*/
  left: 21px; /*モバイル用の位置を調整*/
  transform: translateY(6px) rotate(-45deg);
  width: 30%;
}

.openbtn1.active span:nth-of-type(2),
.openbtn1_mobile.active span:nth-of-type(2) {
  z-index: 100;
  opacity: 0; /*真ん中の線は透過*/
}

.openbtn1.active span:nth-of-type(3) {
  z-index: 100;
  top: 44px; /*ボタンの大きさを大きくしたために、位置を調整*/
  left: 28px; /*ボタンの大きさを大きくしたために、位置を調整*/
  transform: translateY(-6px) rotate(45deg);
  width: 30%;
}
.openbtn1_mobile.active span:nth-of-type(3) {
  top: 34px; /*モバイル用の位置を調整*/
  left: 21px; /*モバイル用の位置を調整*/
  transform: translateY(-6px) rotate(45deg);
  width: 30%;
}

/* waveアニメーションの定義 */
.wave-transform-enter {
  animation: wave-transit-enter 1s 1;
}

.wave-transform-enter-done {
  opacity: 0;
}
@keyframes wave-transit-enter {
  0% {
    transform: translateY(0) scale(1, -1.4);
  }
  99% {
    opacity: 1;
  }
  100% {
    transform: translateY(calc(180vh)) scale(1, -5);
    opacity: 0;
  }
}

.wave-transform-exit {
  opacity: 1;
  animation: wave-transit-exit 1s 1;
}

.wave-transform-exit-done {
  opacity: 0;
}

@keyframes wave-transit-exit {
  0% {
    transform: translateY(calc(180vh)) scale(1, -5);
  }
  99% {
    opacity: 1;
  }
  100% {
    transform: translateY(-50) scale(1, 0);
    opacity: 0;
  }
}

/* waveアニメーションの定義 */
.wave-transform-reverse-enter {
  animation: wave-transit-reverse-enter 1s 1;
}

.wave-transform-reverse-enter-done {
  opacity: 0;
}
@keyframes wave-transit-reverse-enter {
  0% {
    transform: translateY(-100) scale(1, 1.4);
  }
  99% {
    opacity: 1;
  }
  100% {
    transform: translateY(calc(120vh)) scale(1, 4);
    opacity: 0;
  }
}

.wave-transform-reverse-exit {
  opacity: 1;
  animation: wave-transit-reverse-exit 1s 1;
}

.wave-transform-reverse-exit-done {
  opacity: 0;
}

@keyframes wave-transit-reverse-exit {
  0% {
    transform: translateY(calc(120vh)) scale(1, 4);
  }
  99% {
    opacity: 1;
  }
  100% {
    transform: translateY(-100) scale(1, 0);
    opacity: 0;
  }
}

/*menu transform*/

.menu-transform-enter {
  animation: menu-transit-enter 1s 1;
}

@keyframes menu-transit-enter {
  0% {
    transform: translateY(calc(-100vh));
  }
  80% {
    transform: translateY(calc(-5vh));
  }
  100% {
    transform: translateY(0);
  }
}

.menu-transform-exit {
  opacity: 1;
  animation: menu-transit-exit 1s 1;
}

.menu-transform-exit-done {
  opacity: 0;
}

@keyframes menu-transit-exit {
  0% {
    transform: translateY(0);
  }
  20% {
    transform: translateY(calc(-5vh));
  }
  100% {
    transform: translateY(calc(-100vh));
  }
}

.wave-hovering-enter {
  animation: wave-hovering-enter 2s 1;
}

@keyframes wave-hovering-enter {
  0% {
    transform: translateY(calc(-15vh)) scale(1, 0);
  }
  100% {
    transform: translateY(0) scale(1, -1.4);
  }
}

.wave-hovering-enter-done {
  transform: translateY(0) scale(1, -1.4);
}

.wave-hovering-exit {
  animation: wave-hovering-exit 2s 1;
}

.wave-hovering-exit-done {
  opacity: 0;
}

@keyframes wave-hovering-exit {
  0% {
    transform: translateY(0) scale(1, -1.4);
  }
  100% {
    transform: translateY(calc(-15vh)) scale(1, 0);
  }
}

.main-transit {
  animation: main-transit 1s 1;
  opacity: 0;
}

@keyframes main-transit {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

.main-transit-done {
  animation: main-transit-done 1s 1;
  opacity: 1;
}

@keyframes main-transit-done {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

/*After loading anim*/

.wave-transform-after-loading-enter {
  opacity: 1;
  animation: wave-transit-exit 1s 1;
}

.wave-transform-after-loading-enter-done {
  opacity: 0;
}

.wave-transform-reverse-after-loading-enter {
  opacity: 1;
  animation: wave-transit-reverse-exit 1s 1;
}

.wave-transform-reverse-after-loading-enter-done {
  opacity: 0;
}

.loading-end {
  opacity: 1;
}

.loading-end-exit {
  opacity: 1;
  animation: loading-transparent 1s 1;
}
.loading-end-exit-done {
  opacity: 0;
}

@keyframes loading-transparent {
  0% {
    opacity: 1;
  }
  20% {
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}

/*縦書き設定*/
.vertical-rl-all {
  writing-mode: vertical-rl;
}

.direction-rtl-all {
  direction: rtl;
}

.text-upright-all {
  text-orientation: upright;
}

/* ハイライト設定 */
.highlighter-black {
  position: relative;
  color: #000000; /* Original text color (Black) */
}

.highlighter-orange span {
  position: relative;
  z-index: 3;
}

.highlighter-black::before {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
  content: attr(data-txt);
  color: #ffffff; /* Highlighted text color (White) */
  z-index: 2;
  clip-path: inset(0 100% 0 0); /* Adjusted clipping */
  animation: textHighlight 0.5s forwards, drawHighlight 0.5s forwards;
  background-color: #000000; /* Background color */
}

@keyframes textHighlight {
  0% {
    clip-path: inset(0 100% 0 0);
  }
  100% {
    clip-path: inset(0 0 0 0);
  }
}

@keyframes drawHighlight {
  0% {
    width: 0;
  }
  100% {
    width: 100%;
  }
}

.highlighter-orange {
  position: relative;
  overflow: hidden;
  z-index: 2;
}
.highlighter-orange span {
  position: relative;
  z-index: 3;
}

.highlighter-orange::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 0;
  z-index: 1;
  background: #ff9100;
  animation: drawHighlight 0.5s forwards;
}

/*TextのOverflow設定*/
.overflow-ellipsis {
  position: relative;
  overflow: hidden;
}

.overflow-ellipsis::after {
  content: '...';
  position: absolute;
  bottom: 0;
  right: 0;
  padding-left: 10px;
  background: white; /* 背景色をpタグの背景色に合わせる */
  pointer-events: none; /* マウスイベントを無効にする */
}

/**
* TextMultilineOverflow.tsxのCSS
*/
@keyframes slideLeft {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-100%);
  }
}

@keyframes slideRight {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(100%);
  }
}

@font-face {
  font-family: 'Reitam';
  src: url('../public/font/Reitam Regular.otf') format('opentype'),
    url('../public/font/Reitam Regular-Italic.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'BebasKai';
  src: url('../public/font/BebasKai.otf') format('opentype'),
    url('../public/font/BebasKai.ttf') format('opentype');
  font-weight: normal;
  font-style: normal;
}
